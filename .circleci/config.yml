version: 2.1

references:
  workspace_path: &workspace_path
    ~/project

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_path

  checkout_code: &checkout_code
    checkout:
      path: *workspace_path

  show_browsers_version: &show_browsers_version
    run:
      command: |
        google-chrome --version
        chromedriver --version

  install_node_deps: &install_node_deps
    node/install-packages:
      pkg-manager: npm
      app-dir: ~/project/frontend
      cache-key: "package-lock.json"

orbs:
  ruby: circleci/ruby@1.1.2
  node: circleci/node@2
  browser-tools: circleci/browser-tools@1.1.0

jobs:
  build:
    docker:
    - image: cimg/ruby:2.6.6-browsers

    working_directory: *workspace_path
    steps:
    - *checkout_code

    - ruby/install-deps

    - run:
        name: Change node version to match with frontend job version
        command: |
          curl -sSL "https://nodejs.org/dist/v10.22.1/node-v10.22.1-linux-x64.tar.xz" | sudo tar --strip-components=2 -xJ -C /usr/local/bin/ node-v10.22.1-linux-x64/bin/node
          curl https://www.npmjs.com/install.sh | sudo bash
    - run: node -v

    - *install_node_deps

    - run:
        name: Compiling frontend to production
        command: |
          mkdir public
          cd frontend
          npm run build -- --prod --watch=false --progress=false --outputPath=../public

    - persist_to_workspace:
        root: *workspace_path
        paths:
        - public

  frontend:
    docker:
    - image: cimg/node:10.22.1-browsers

    working_directory: *workspace_path
    steps:
    - *checkout_code

    - browser-tools/install-chrome
    - browser-tools/install-chromedriver

    - *install_node_deps
    - *show_browsers_version

    - run: node --version

    - run:
        name: Run frontend tests
        command: |
          cd frontend
          npm run test -- --watch=false --progress=false --browsers=ChromeHeadless --reporters dots

  api:
    docker:
    - image: cimg/ruby:2.6.6-browsers
    - image: circleci/postgres:9.6.2-alpine
      environment:
        POSTGRES_USER: root
        POSTGRES_DB: myinterviews_test
        POSTGRES_PASSWORD: ''

    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DB_HOST: 127.0.0.1
      APP_DB_USER: root
      APP_DB_PASSWORD: ""
      RAILS_ENV: test
      COVERAGE: true

    working_directory: *workspace_path
    steps:
    - *checkout_code

    - browser-tools/install-chrome
    - browser-tools/install-chromedriver

    - *attach_workspace

    - *show_browsers_version

    - run: ruby --version

    - ruby/install-deps

    - run:
        name: Wait for DB
        command: dockerize -wait tcp://localhost:5432 -timeout 1m

    - run:
        name: Database setup
        command: |
          bundle exec rails db:schema:load --trace
          bundle exec rails db:migrate

    - run:
        name: Check factory_bot factories
        command: bundle exec rake factory_bot:lint

    - run: bundle exec rspec
    - run: bundle exec rubocop

  build_docker_image:
    docker:
    - image: circleci/buildpack-deps:stretch
    steps:
    - *checkout_code
    - setup_remote_docker
    - run:
        name: Build docker image
        command: |
          docker build .

workflows:
  myinterviews_flow:
    jobs:
    - build
    - frontend:
        requires:
        - build
    - api:
        requires:
        - build
    - build_docker_image:
        requires:
        - frontend
        - api